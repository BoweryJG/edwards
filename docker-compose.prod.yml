version: '3.8'

services:
  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: pedro-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - pedro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Frontend production service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend-prod
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VCS_REF=${VCS_REF:-$(git rev-parse --short HEAD)}
    container_name: pedro-frontend
    restart: unless-stopped
    networks:
      - pedro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Backend production service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend-prod
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VCS_REF=${VCS_REF:-$(git rev-parse --short HEAD)}
    container_name: pedro-backend
    env_file:
      - ./backend/.env.production
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - PORT=3001
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - pedro-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # Redis production service
  redis:
    image: redis:7-alpine
    container_name: pedro-redis-prod
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - pedro-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Optional: Backup service
  backup:
    image: alpine:latest
    container_name: pedro-backup
    volumes:
      - redis-data:/data/redis:ro
      - ./backups:/backups
    command: /bin/sh -c "while true; do tar -czf /backups/redis-backup-$$(date +%Y%m%d-%H%M%S).tar.gz /data/redis; find /backups -name '*.tar.gz' -mtime +7 -delete; sleep 86400; done"
    networks:
      - pedro-network
    restart: unless-stopped

networks:
  pedro-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  nginx-cache:
    driver: local